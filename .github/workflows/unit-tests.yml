name: "Unit tests"

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-18.04
    continue-on-error: ${{ matrix.experimental }} # Experimental builds may fail

    defaults:
      run:
        shell: bash -l -e -o pipefail {0}

    env:
      WSI_CONDA_CHANNEL: "https://dnap.cog.sanger.ac.uk/npg/conda/devel/generic"
      CONDA_TEST_ENVIRONMENT: "testenv"
      CK_DEFAULT_TIMEOUT: 20

    strategy:
      matrix:
        include:
          - irods: "4.2.7"
            server_image: "wsinpg/ub-16.04-irods-4.2.7:latest"
            experimental: false
          - irods: "4.2.7"
            server_image: "wsinpg/ub-18.04-irods-4.2.10:latest"
            experimental: true
          - irods: "4.2.7"
            server_image: "wsinpg/ub-18.04-irods-4.2.11:latest"
            experimental: true

          - irods: "4.2.10"
            server_image: "wsinpg/ub-16.04-irods-4.2.7:latest"
            experimental: true
          - irods: "4.2.10"
            server_image: "wsinpg/ub-18.04-irods-4.2.10:latest"
            experimental: false
          - irods: "4.2.10"
            server_image: "wsinpg/ub-18.04-irods-4.2.11:latest"
            experimental: true

          - irods: "4.2.11"
            server_image: "wsinpg/ub-16.04-irods-4.2.7:latest"
            experimental: true
          - irods: "4.2.11"
            server_image: "wsinpg/ub-18.04-irods-4.2.10:latest"
            experimental: true
          - irods: "4.2.11"
            server_image: "wsinpg/ub-18.04-irods-4.2.11:latest"
            experimental: false


    services:
      irods:
        image: ${{ matrix.server_image }}
        options: --name irods-server
        ports:
          - 1247:1247
          - 20000-20199:20000-20199

    steps:
      - uses: actions/checkout@v2

      - name: "Initialize Miniconda"
        run: |
          echo 'source $CONDA/etc/profile.d/conda.sh' >> "$HOME/.bash_profile"

      - name: "Configure Miniconda"
        run: |
          conda config --prepend pkgs_dirs "$HOME/conda/pkgs"
          conda config --prepend envs_dirs "$HOME/conda/envs"

          conda config --set auto_update_conda False
          conda config --prepend channels "$WSI_CONDA_CHANNEL"
          conda info

      - name: "Install iRODS clients"
        run: |
          conda create -y -n "$CONDA_TEST_ENVIRONMENT"
          conda install -y -n "$CONDA_TEST_ENVIRONMENT" python=3.9
          conda install -y -n "$CONDA_TEST_ENVIRONMENT" sphinx=2.4

          conda install -y -n "$CONDA_TEST_ENVIRONMENT" check
          conda install -y -n "$CONDA_TEST_ENVIRONMENT" libjansson-dev
          conda install -y -n "$CONDA_TEST_ENVIRONMENT" "irods-dev ==${{ matrix.irods }}"

          conda install -y -n "$CONDA_TEST_ENVIRONMENT" "irods-icommands ==${{ matrix.irods }}"

      - name: "Configure iRODS clients"
        run: |
          conda activate "$CONDA_TEST_ENVIRONMENT"

          mkdir -p "$HOME/.irods"
          cat <<'EOF' > "$HOME/.irods/irods_environment.json"
          {
              "irods_host": "localhost",
              "irods_port": 1247,
              "irods_user_name": "irods",
              "irods_zone_name": "testZone",
              "irods_home": "/testZone/home/irods",
              "irods_default_resource": "replResc"
          }
          EOF

          echo "irods" | script -q -c "iinit" /dev/null
          ienv
          ils
          ilsresc

      - name: "Build and test baton"
        run: |
          conda activate "$CONDA_TEST_ENVIRONMENT"

          # Is there an environment variable for this?
          CONDA_ENV="/home/runner/conda/envs/$CONDA_TEST_ENVIRONMENT"

          CPPFLAGS="-I$CONDA_ENV/include -I$CONDA_ENV/include/irods"
          LDFLAGS="-L$CONDA_ENV/lib -L$CONDA_ENV/lib/irods/externals"
          PKG_CONFIG_PATH="$CONDA_ENV/lib/pkgconfig"

          autoreconf -i
          ./configure CPPFLAGS="$CPPFLAGS" LDFLAGS="$LDFLAGS" PKG_CONFIG_PATH="$PKG_CONFIG_PATH"

          export LD_LIBRARY_PATH="$CONDA_ENV/lib"

          make check
          make distcheck DISTCHECK_CONFIGURE_FLAGS="CPPFLAGS=\"$CPPFLAGS\" LDFLAGS=\"$LDFLAGS\""

      - name: "Show test log"
        if: ${{ failure() }}
        run: |
          find "$GITHUB_WORKSPACE" -name \*.log -exec cat {} \;
